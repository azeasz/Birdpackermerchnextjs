// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  reviews   Review[]
}

model Product {
  id             String       @id @default(cuid())
  name           String
  description    String       @db.Text
  price          Int
  image          String
  categoryId     String
  category       Category     @relation(fields: [categoryId], references: [id])
  rating         Float        @default(0)
  reviewCount    Int          @default(0)
  inStock        Boolean      @default(true)
  isNew          Boolean      @default(false)
  discount       Int          @default(0)
  features       String       @db.Text
  specifications Json?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  orderItems     OrderItem[]
  reviews        Review[]
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  image       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Order {
  id              String      @id @default(cuid())
  orderNumber     String      @unique
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  status          OrderStatus @default(PROCESSING)
  shippingAddress Json
  paymentMethod   String
  subtotal        Int
  shipping        Int
  tax             Int
  total           Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  items           OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  name      String
  price     Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id           String   @id @default(cuid())
  productId    String
  product      Product  @relation(fields: [productId], references: [id])
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  rating       Int
  comment      String
  helpfulCount Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Content {
  id        String      @id @default(cuid())
  type      ContentType
  title     String
  content   String      @db.Text
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Setting {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum ContentType {
  ABOUT
  FAQ
  TERMS
  PRIVACY
  SHIPPING
  RETURNS
} 